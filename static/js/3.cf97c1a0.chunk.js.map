{"version":3,"sources":["components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStausWithHook.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Post","props","message","like","ava","className","style","backgroundImage","MyPosts","this","onPostClick","postEl","postData","map","p","i","key","ProfileReduxForm","onSubmit","values","PureComponent","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","textareaDefault","dispatch","addPostAction","ProfileStatusWithHook","useState","editMode","setEditMode","status","setSatus","updateStatus","useEffect","onClick","title","autoFocus","onChange","e","currentTarget","value","onBlur","ProfileInfo","React","memo","profile","photos","aboutMe","fullName","src","large","defaultImage","alt","Profile","ProfileContainer","nextProps","nextState","nextContext","getUserProfile","getStatus","history","match","authId","console","log","userId","params","push","Component","compose","auth","isAuth","id","withAuthRedirect","withRouter"],"mappings":"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","file":"static/js/3.cf97c1a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Post = (props) => {\r\n  const{message, like, ava} = props;\r\n\r\n  return (\r\n    <div className='post-block'>\r\n      <div className=\"logo\" style={{backgroundImage: `url(${ava})`}}>&nbsp;</div>\r\n\r\n      <pre className=\"message\">\r\n        {message}\r\n      </pre>\r\n\r\n      <div className={'like'}>\r\n        Кількість Like: {like}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React, {PureComponent} from 'react';\r\nimport Post from \"./Posts/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/form/FormsControls\";\r\n\r\nclass MyPosts extends PureComponent {\r\n\r\n  render() {\r\n    const {onPostClick, postData} = this.props;\r\n    const postEl = postData.map((p, i) => <Post key={i} message={p.message} like={p.like} ava={p.ava}/>);\r\n\r\n    let addPostMessage = (values) => {\r\n      onPostClick(values.message);\r\n    };\r\n\r\n    return (\r\n      <div className='posts-block'>\r\n        <h2>Мої повідомлення</h2>\r\n\r\n        <ProfileReduxForm onSubmit={addPostMessage}/>\r\n\r\n        {postEl}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst ProfileForm = (props) => {\r\n  const {handleSubmit} = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field component={Textarea}\r\n             placeholder=\"Текст повідомлення\"\r\n             name={'message'}\r\n             validate={[required, maxLength10]}\r\n      />\r\n      <button>Створити повідомлення</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileReduxForm = reduxForm({form: 'profile'})(ProfileForm);\r\n\r\nexport default MyPosts;","import {addPostAction} from '../../../redux/profile-reducer.js';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    postData: state.profilePage.postData,\r\n    textareaDefault: state.profilePage.textareaDefault\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onPostClick: (values) => {\r\n      dispatch(addPostAction(values));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setSatus] = useState(props.status);\r\n  let {updateStatus} = props;\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateStatus(status);\r\n  };\r\n\r\n  let onStatusChange = (e) => {\r\n    setSatus(e.currentTarget.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n      <div onClick={activateEditMode} className='status-info' title={\"Редагувати\"}>\r\n        {status || \"Немає статуса\"}\r\n      </div>\r\n      }\r\n\r\n      {editMode &&\r\n      <div className='status-info'>\r\n        <input autoFocus\r\n               onChange={onStatusChange}\r\n               onBlur={deactivateEditMode}\r\n               value={status}/>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from 'react';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport defaultImage from '../../../assect/img/default-user.png';\r\nimport ProfileStatusWithHook from \"./ProfileStausWithHook\";\r\n\r\nconst ProfileInfo = React.memo(props => {\r\n  if(!props.profile){\r\n    return <Preloader/>\r\n  }\r\n\r\n  const {photos, aboutMe, fullName} = props.profile;\r\n  const {status, updateStatus} = props;\r\n  return(\r\n    <div className=\"account\">\r\n      <img src={photos.large ? photos.large : defaultImage} alt={'alt'}/>\r\n\r\n      <p>Про мене: {aboutMe}</p>\r\n      <p>Имя: {fullName}</p>\r\n\r\n      <div>\r\n        <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  const {profile, status, updateStatus} = props;\r\n\r\n  return (\r\n    <div className='content-profile'>\r\n      <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport Profile from './Profile';\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport {withAuthRedirect} from \"../../hoc/whithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  // зупиняє повторний render\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return nextProps !== this.props || nextState !== this.state;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {getUserProfile, getStatus, history, match, authId} = this.props;\r\n    console.log(this.props);\r\n    let userId = match.params.userId;\r\n\r\n    if(!userId){\r\n      // todo\r\n      userId = 1218;\r\n      // userId = authId;\r\n\r\n      if(!userId){\r\n        history.push('/login');\r\n      }\r\n    }\r\n    getUserProfile(userId);\r\n    getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Profile {...this.props}/>\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  auth: state.auth.isAuth,\r\n  status: state.profilePage.status,\r\n  authId: state.auth.id\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}