{"version":3,"sources":["components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStausWithHook.js","components/Profile/ProfileInfo/ProfileData.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Post","props","message","like","ava","className","style","backgroundImage","MyPosts","this","onPostClick","postEl","postData","map","p","i","key","ProfileReduxForm","onSubmit","values","PureComponent","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","textareaDefault","dispatch","addPostAction","ProfileStatusWithHook","useState","editMode","setEditMode","status","setSatus","updateStatus","useEffect","onClick","title","autoFocus","onChange","e","currentTarget","value","onBlur","Contacts","contactTitle","contactValue","ProfileData","profile","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","contacts","goToEditMode","Object","keys","ProfileDataFormReduxForm","disableEditMode","createField","Input","type","ProfileInfo","React","memo","photos","saveProfile","src","large","defaultImage","alt","formData","console","log","initialValues","Profile","ProfileContainer","nextProps","nextState","nextContext","getUserProfile","getStatus","history","match","userId","authId","params","push","Component","compose","auth","isAuth","id","withAuthRedirect","withRouter"],"mappings":"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","file":"static/js/3.60f7fb90.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Post = (props) => {\r\n  const{message, like, ava} = props;\r\n\r\n  return (\r\n    <div className='post-block'>\r\n      <div className=\"logo\" style={{backgroundImage: `url(${ava})`}}>&nbsp;</div>\r\n\r\n      <pre className=\"message\">\r\n        {message}\r\n      </pre>\r\n\r\n      <div className={'like'}>\r\n        Кількість Like: {like}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React, {PureComponent} from 'react';\r\nimport Post from \"./Posts/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/form/FormsControls\";\r\n\r\nclass MyPosts extends PureComponent {\r\n\r\n  render() {\r\n    const {onPostClick, postData} = this.props;\r\n    const postEl = postData.map((p, i) => <Post key={i} message={p.message} like={p.like} ava={p.ava}/>);\r\n\r\n    let addPostMessage = (values) => {\r\n      onPostClick(values.message);\r\n    };\r\n\r\n    return (\r\n      <div className='posts-block'>\r\n        <h2>Мої повідомлення</h2>\r\n\r\n        <ProfileReduxForm onSubmit={addPostMessage}/>\r\n\r\n        {postEl}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst ProfileForm = (props) => {\r\n  const {handleSubmit} = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field component={Textarea}\r\n             placeholder=\"Текст повідомлення\"\r\n             name={'message'}\r\n             validate={[required, maxLength10]}\r\n      />\r\n      <button>Створити повідомлення</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileReduxForm = reduxForm({form: 'profile'})(ProfileForm);\r\n\r\nexport default MyPosts;","import {addPostAction} from '../../../redux/profile-reducer.js';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    postData: state.profilePage.postData,\r\n    textareaDefault: state.profilePage.textareaDefault\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onPostClick: (values) => {\r\n      dispatch(addPostAction(values));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setSatus] = useState(props.status);\r\n  let {updateStatus} = props;\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateStatus(status);\r\n  };\r\n\r\n  let onStatusChange = (e) => {\r\n    setSatus(e.currentTarget.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n      <div onClick={activateEditMode} className='status-info' title={\"Редагувати\"}>\r\n        {status || \"Немає статуса\"}\r\n      </div>\r\n      }\r\n\r\n      {editMode &&\r\n      <div className='status-info'>\r\n        <input autoFocus\r\n               onChange={onStatusChange}\r\n               onBlur={deactivateEditMode}\r\n               value={status}/>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from \"react\";\r\n\r\nconst ProfileData = (props) => {\r\n  const {aboutMe, fullName, lookingForAJob, lookingForAJobDescription, contacts} = props.profile;\r\n  const {goToEditMode} = props;\r\n\r\n  return(\r\n    <div>\r\n      <br/>\r\n\r\n      <button onClick={ goToEditMode }>Редагувати профіль</button>\r\n\r\n      <p><strong>Про мене:</strong> {aboutMe}</p>\r\n      <p><strong>Имя:</strong> {fullName}</p>\r\n\r\n      <p><strong>Роботу:</strong> {lookingForAJob ? \"Нешукаю\" : \"Шукаю\"}</p>\r\n      <p><strong>Описання роботи:</strong> {lookingForAJobDescription ? lookingForAJobDescription : \"Інформація відсутня\"}</p>\r\n\r\n      <p><strong>Соцмережі:</strong></p> {Object.keys(contacts).map(key => {\r\n      return <Contacts key={key} contactTitle={key} contactValue={contacts[key] ? contacts[key] : \"-\"}/>\r\n    })}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n  return <p><strong>{contactTitle}:</strong> {contactValue}</p>\r\n};\r\n\r\nexport default ProfileData;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../../common/form/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  const {handleSubmit, disableEditMode, profile} = props;\r\n\r\n  return(\r\n    <form onSubmit={handleSubmit} className={'default'}>\r\n      <br/>\r\n\r\n      <div className={'default'}>\r\n        <button onClick={disableEditMode}>Зберегти профіль</button>\r\n      </div>\r\n\r\n      <div className={'default'}>\r\n        <strong>Про мене:</strong>\r\n        {createField(\"\", 'aboutMe', Input)}\r\n      </div>\r\n\r\n      <div className={'default'}>\r\n        <strong>Имя:</strong>\r\n        {createField(\"\", 'fullName', Input)}\r\n      </div>\r\n\r\n      <div className={'default'}>\r\n        <strong>Роботу шукаю:</strong>\r\n        {createField(\"\", 'lookingForAJob', Input, [], {type: 'checkbox'})}\r\n      </div>\r\n\r\n      <div className={'default'}>\r\n        <strong>Описання роботи:</strong>\r\n        {createField(\"\", 'lookingForAJobDescription', Textarea)}\r\n      </div>\r\n\r\n      <br/>\r\n\r\n      <p><strong>Соцмережі:</strong></p>\r\n      {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={'default'}>\r\n          <strong>{key}</strong>\r\n          {createField(\"\", 'contacts.' + key, Input)}\r\n        </div>;\r\n      })}\r\n    </form>\r\n  );\r\n};\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport defaultImage from '../../../assect/img/default-user.png';\r\nimport ProfileStatusWithHook from \"./ProfileStausWithHook\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = React.memo(props => {\r\n  let {profile} = props;\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if(!profile){\r\n    return <Preloader/>\r\n  }\r\n  const {photos} = profile;\r\n  const {status, updateStatus, saveProfile} = props;\r\n\r\n  const goToEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const disableEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n    saveProfile(formData);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return(\r\n    <div className=\"account\">\r\n      <img src={photos.large ? photos.large : defaultImage} alt={'alt'}/>\r\n\r\n      {editMode ? <ProfileDataFormReduxForm\r\n                    onSubmit={onSubmit}\r\n                    disableEditMode={disableEditMode}\r\n                    initialValues={profile}\r\n                    profile={profile}\r\n                  />\r\n\r\n                : <ProfileData goToEditMode={goToEditMode} profile={profile}/>\r\n      }\r\n\r\n\r\n      <div>\r\n        <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  const {profile, status, updateStatus, saveProfile} = props;\r\n\r\n  return (\r\n    <div className='content-profile'>\r\n      <ProfileInfo profile={profile}\r\n                   status={status}\r\n                   updateStatus={updateStatus}\r\n                   saveProfile={saveProfile}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport Profile from './Profile';\r\nimport {getStatus, getUserProfile, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport {withAuthRedirect} from \"../../hoc/whithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  // зупиняє повторний render\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return nextProps !== this.props || nextState !== this.state;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {getUserProfile, getStatus, history, match, authId} = this.props;\r\n    let userId = match.params.userId;\r\n\r\n    if(!userId){\r\n      // todo\r\n      userId = 1218;\r\n      // userId = authId;\r\n\r\n      if(!userId){\r\n        history.push('/login');\r\n      }\r\n    }\r\n    getUserProfile(userId);\r\n    getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Profile {...this.props}/>\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  auth: state.auth.isAuth,\r\n  status: state.profilePage.status,\r\n  authId: state.auth.id\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, saveProfile}),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}